#ifndef TESTVECTORS_H
#define TESTVECTORS_H

#include "testcase.h"

static const TestCase CASES_I_10[] = {
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            2, UINT32_C(1) << 16, 1
        },
        "\xf6\xc4\xdb\x4a\x54\xe2\xa3\x70"
        "\x62\x7a\xff\x3d\xb6\x17\x6b\x94"
        "\xa2\xa2\x09\xa6\x2c\x8e\x36\x15"
        "\x27\x11\x80\x2f\x7b\x30\xc6\x94",
        "password", 8
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            2, UINT32_C(1) << 8, 1
        },
        "\xfd\x4d\xd8\x3d\x76\x2c\x49\xbd"
        "\xea\xf5\x7c\x47\xbd\xcd\x0c\x2f"
        "\x1b\xab\xf8\x63\xfd\xeb\x49\x0d"
        "\xf6\x3e\xde\x99\x75\xfc\xcf\x06",
        "password", 8
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            2, UINT32_C(1) << 8, 2
        },
        "\xb6\xc1\x15\x60\xa6\xa9\xd6\x1e"
        "\xac\x70\x6b\x79\xa2\xf9\x7d\x68"
        "\xb4\x46\x3a\xa3\xad\x87\xe0\x0c"
        "\x07\xe2\xb0\x1e\x90\xc5\x64\xfb",
        "password", 8
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            1, UINT32_C(1) << 16, 1
        },
        "\x81\x63\x05\x52\xb8\xf3\xb1\xf4"
        "\x8c\xdb\x19\x92\xc4\xc6\x78\x64"
        "\x3d\x49\x0b\x2b\x5e\xb4\xff\x6c"
        "\x4b\x34\x38\xb5\x62\x17\x24\xb2",
        "password", 8
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            4, UINT32_C(1) << 16, 1
        },
        "\xf2\x12\xf0\x16\x15\xe6\xeb\x5d"
        "\x74\x73\x4d\xc3\xef\x40\xad\xe2"
        "\xd5\x1d\x05\x24\x68\xd8\xc6\x94"
        "\x40\xa3\xa1\xf2\xc1\xc2\x84\x7b",
        "password", 8
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            2, UINT32_C(1) << 16, 1
        },
        "\xe9\xc9\x02\x07\x4b\x67\x54\x53"
        "\x1a\x3a\x0b\xe5\x19\xe5\xba\xf4"
        "\x04\xb3\x0c\xe6\x9b\x3f\x01\xac"
        "\x3b\xf2\x12\x29\x96\x01\x09\xa3",
        "differentpassword", 17
    },
    {
        {
            32, "diffsalt", 8, nullptr, 0, nullptr, 0,
            2, UINT32_C(1) << 16, 1
        },
        "\x79\xa1\x03\xb9\x0f\xe8\xae\xf8"
        "\x57\x0c\xb3\x1f\xc8\xb2\x22\x59"
        "\x77\x89\x16\xf8\x33\x6b\x7b\xda"
        "\xc3\x89\x25\x69\xd4\xf1\xc4\x97",
        "password", 8
    },
};

static const TestCase CASES_I_13[] = {
    {
        {
            32,
            "\x02\x02\x02\x02\x02\x02\x02\x02"
            "\x02\x02\x02\x02\x02\x02\x02\x02", 16,
            "\x03\x03\x03\x03\x03\x03\x03\x03", 8,
            "\x04\x04\x04\x04\x04\x04\x04\x04"
            "\x04\x04\x04\x04", 12,
            3, 32, 4
        },
        "\xc8\x14\xd9\xd1\xdc\x7f\x37\xaa"
        "\x13\xf0\xd7\x7f\x24\x94\xbd\xa1"
        "\xc8\xde\x6b\x01\x6d\xd3\x88\xd2"
        "\x99\x52\xa4\xc4\x67\x2b\x6c\xe8",
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01", 32
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            2, UINT32_C(1) << 16, 1
        },
        "\xc1\x62\x88\x32\x14\x7d\x97\x20"
        "\xc5\xbd\x1c\xfd\x61\x36\x70\x78"
        "\x72\x9f\x6d\xfb\x6f\x8f\xea\x9f"
        "\xf9\x81\x58\xe0\xd7\x81\x6e\xd0",
        "password", 8
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            2, UINT32_C(1) << 8, 1
        },
        "\x89\xe9\x02\x9f\x46\x37\xb2\x95"
        "\xbe\xb0\x27\x05\x6a\x73\x36\xc4"
        "\x14\xfa\xdd\x43\xf6\xb2\x08\x64"
        "\x52\x81\xcb\x21\x4a\x56\x45\x2f",
        "password", 8
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            2, UINT32_C(1) << 8, 2
        },
        "\x4f\xf5\xce\x27\x69\xa1\xd7\xf4"
        "\xc8\xa4\x91\xdf\x09\xd4\x1a\x9f"
        "\xbe\x90\xe5\xeb\x02\x15\x5a\x13"
        "\xe4\xc0\x1e\x20\xcd\x4e\xab\x61",
        "password", 8
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            1, UINT32_C(1) << 16, 1
        },
        "\xd1\x68\x07\x5c\x4d\x98\x5e\x13"
        "\xeb\xea\xe5\x60\xcf\x8b\x94\xc3"
        "\xb5\xd8\xa1\x6c\x51\x91\x6b\x6f"
        "\x4a\xc2\xda\x3a\xc1\x1b\xbe\xcf",
        "password", 8
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            4, UINT32_C(1) << 16, 1
        },
        "\xaa\xa9\x53\xd5\x8a\xf3\x70\x6c"
        "\xe3\xdf\x1a\xef\xd4\xa6\x4a\x84"
        "\xe3\x1d\x7f\x54\x17\x52\x31\xf1"
        "\x28\x52\x59\xf8\x81\x74\xce\x5b",
        "password", 8
    },
    {
        {
            32, "somesalt", 8, nullptr, 0, nullptr, 0,
            2, UINT32_C(1) << 16, 1
        },
        "\x14\xae\x8d\xa0\x1a\xfe\xa8\x70"
        "\x0c\x23\x58\xdc\xef\x7c\x53\x58"
        "\xd9\x02\x12\x82\xbd\x88\x66\x3a"
        "\x45\x62\xf5\x9f\xb7\x4d\x22\xee",
        "differentpassword", 17
    },
    {
        {
            32, "diffsalt", 8, nullptr, 0, nullptr, 0,
            2, UINT32_C(1) << 16, 1
        },
        "\xb0\x35\x7c\xcc\xfb\xef\x91\xf3"
        "\x86\x0b\x0d\xba\x44\x7b\x23\x48"
        "\xcb\xef\xec\xad\xaf\x99\x0a\xbf"
        "\xe9\xcc\x40\x72\x6c\x52\x12\x71",
        "password", 8
    },
};

static const TestCase CASES_D_10[] = {
    {
        {
            32,
            "\x02\x02\x02\x02\x02\x02\x02\x02"
            "\x02\x02\x02\x02\x02\x02\x02\x02", 16,
            "\x03\x03\x03\x03\x03\x03\x03\x03", 8,
            "\x04\x04\x04\x04\x04\x04\x04\x04"
            "\x04\x04\x04\x04", 12,
            3, 32, 4
        },
        "\x96\xa9\xd4\xe5\xa1\x73\x40\x92"
        "\xc8\x5e\x29\xf4\x10\xa4\x59\x14"
        "\xa5\xdd\x1f\x5c\xbf\x08\xb2\x67"
        "\x0d\xa6\x8a\x02\x85\xab\xf3\x2b",
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01", 32
    },
};

static const TestCase CASES_D_13[] = {
    {
        {
            32,
            "\x02\x02\x02\x02\x02\x02\x02\x02"
            "\x02\x02\x02\x02\x02\x02\x02\x02", 16,
            "\x03\x03\x03\x03\x03\x03\x03\x03", 8,
            "\x04\x04\x04\x04\x04\x04\x04\x04"
            "\x04\x04\x04\x04", 12,
            3, 32, 4
        },
        "\x51\x2b\x39\x1b\x6f\x11\x62\x97"
        "\x53\x71\xd3\x09\x19\x73\x42\x94"
        "\xf8\x68\xe3\xbe\x39\x84\xf3\xc1"
        "\xa1\x3a\x4d\xb9\xfa\xbe\x4a\xcb",
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01", 32
    },
};

static const TestCase CASES_ID_10[] = {
    {
        {
            32,
            "\x02\x02\x02\x02\x02\x02\x02\x02"
            "\x02\x02\x02\x02\x02\x02\x02\x02", 16,
            "\x03\x03\x03\x03\x03\x03\x03\x03", 8,
            "\x04\x04\x04\x04\x04\x04\x04\x04"
            "\x04\x04\x04\x04", 12,
            3, 32, 4
        },
        "\xb6\x46\x15\xf0\x77\x89\xb6\x6b"
        "\x64\x5b\x67\xee\x9e\xd3\xb3\x77"
        "\xae\x35\x0b\x6b\xfc\xbb\x0f\xc9"
        "\x51\x41\xea\x8f\x32\x26\x13\xc0",
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01", 32
    },
};

static const TestCase CASES_ID_13[] = {
    {
        {
            32,
            "\x02\x02\x02\x02\x02\x02\x02\x02"
            "\x02\x02\x02\x02\x02\x02\x02\x02", 16,
            "\x03\x03\x03\x03\x03\x03\x03\x03", 8,
            "\x04\x04\x04\x04\x04\x04\x04\x04"
            "\x04\x04\x04\x04", 12,
            3, 32, 4
        },
        "\x0d\x64\x0d\xf5\x8d\x78\x76\x6c"
        "\x08\xc0\x37\xa3\x4a\x8b\x53\xc9"
        "\xd0\x1e\xf0\x45\x2d\x75\xb6\x5e"
        "\xb5\x25\x20\xe9\x6b\x01\xe6\x59",
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01"
        "\x01\x01\x01\x01\x01\x01\x01\x01", 32
    },
};

#endif // TESTVECTORS_H
